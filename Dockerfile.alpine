# Install cargo-chef for a base step
FROM clux/muslrust:stable AS chef
USER root
RUN cargo install cargo-chef
WORKDIR /app

# Plan out the build
FROM chef AS planner
COPY Cargo.toml .
RUN mkdir -p src && echo "fn main() {println!(\"if you see this, the build broke\")}" > src/main.rs
RUN cargo chef prepare --recipe-path recipe.json

FROM chef AS builder
COPY --from=planner /app/recipe.json recipe.json

# # Set up environment variables for the build
# ENV MYSQL_VERSION=8.0.30

# RUN apt update -y && apt install -y libncurses5-dev
# # Build libmysqlclient
# RUN curl -sSL https://downloads.mysql.com/archives/get/p/23/file/mysql-${MYSQL_VERSION}.tar.gz | tar xz && \
#     cd mysql-$MYSQL_VERSION && \
#     export CC="musl-gcc -fPIE -pie" && \
#     mkdir bld && \
#     cd bld && \
#     cmake .. -DDOWNLOAD_BOOST=1 -DWITH_BOOST=/usr/local/boost -DWITHOUT_SERVER:BOOL=ON -DCMAKE_INSTALL_PREFIX=$PREFIX -DCMAKE_INCLUDE_PATH=$PREFIX/include -DCMAKE_CXX_INCLUDE_PATH=$PREFIX/include \
#     make -j$(nproc) && \
#     make install && \
#     cd ../.. && \
#     rm -rf mysql-$MYSQL_VERSION

RUN cargo chef cook --release --target x86_64-unknown-linux-musl --recipe-path recipe.json

# Compile dependencies
COPY Cargo.toml Cargo.lock ./

# Copy source and build
COPY src src
COPY migrations migrations
COPY README.md README.md

# Database support: postgres, sqlite
ARG ENABLED_FEATURES="postgres,sqlite"

RUN cargo build --release --target x86_64-unknown-linux-musl --no-default-features --features ${ENABLED_FEATURES}

FROM alpine AS runtime

WORKDIR /app

# RUN addgroup -S user && adduser -S user -G user

COPY --from=builder /app/target/x86_64-unknown-linux-musl/release/autopulse /usr/local/bin/
COPY default.toml default.toml

# RUN chown -R user:user /app

# USER user

CMD ["/usr/local/bin/autopulse"]