# Install cargo-chef for a base step
ARG BUILD_FROM=clux/muslrust:stable
ARG RUNTIME_FROM=alpine:latest

FROM ${BUILD_FROM} AS chef
USER root
RUN cargo install cargo-chef
WORKDIR /app

# Plan out the build
FROM chef AS planner
<<<<<<< HEAD
COPY . .
RUN cargo chef prepare --recipe-path recipe.json
=======
COPY Cargo.toml .
RUN mkdir -p src && echo "fn main() {println!(\"if you see this, the build broke\")}" > src/main.rs
<<<<<<< HEAD
RUN cargo chef prepare --recipe-path recipe.json --features ${ENABLED_FEATURES}
>>>>>>> d28740a (feat(docker): amd64 builds)
=======
RUN cargo chef prepare --recipe-path recipe.json
>>>>>>> f448bd9 (chore(docker): chef prepare no feature)

FROM chef AS builder

ARG TARGET=x86_64-unknown-linux-musl

COPY --from=planner /app/recipe.json recipe.json

# Database support: postgres, sqlite
ARG ENABLED_FEATURES="postgres,sqlite"

RUN cargo chef cook --release --target ${TARGET} --recipe-path recipe.json --features ${ENABLED_FEATURES}

# Compile dependencies
COPY Cargo.toml Cargo.lock ./

# Copy source and build
COPY src src
COPY migrations migrations
COPY README.md README.md

RUN cargo build --release --target ${TARGET} --no-default-features --features ${ENABLED_FEATURES}


FROM ${RUNTIME_FROM} as runtime

WORKDIR /app

# RUN addgroup -S user && adduser -S user -G user

COPY --from=builder /app/target/${TARGET}/release/autopulse /usr/local/bin/

# RUN chown -R user:user /app

# USER user

CMD ["/usr/local/bin/autopulse"]